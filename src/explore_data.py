import pandas as pd
import numpy as np
data = pd.read_csv("/Users/user/Documents/Code/Demo/data/chipotle.tsv",delimiter='\t')
print(data.head())

from tabulate import tabulate
print(tabulate(data.head(), headers='keys', tablefmt='fancy_grid'))

#1. Basic Data Cleaning:
#Convert prices: The item_price column contains a dollar sign, so we need to convert that to a float for any numerical analysis.

# Remove the dollar sign and convert to float
data['item_price'] = data['item_price'].str.replace('$', '').astype(float)
#Handle nulls: Check and deal with any null values in choice_description or other columns.
# Fill NaN in 'choice_description' with an empty string
data['choice_description'] = data['choice_description'].fillna('')

#2. Exploratory Data Analysis (EDA):
#Here’s what we can explore:

#A. Top 10 Most Ordered Items:
#We can identify which items are the most popular at Chipotle by summing the quantity for each item_name.
# Top 10 most ordered items
top_items = data.groupby('item_name')['quantity'].sum().sort_values(ascending=False).head(10)
print(top_items)

#B. Total Revenue Generated:
#By summing the item_price column, we can calculate the total revenue generated.
# Calculate total revenue
total_revenue = (data['quantity'] * data['item_price']).sum()
print(f'Total revenue: ${total_revenue:.2f}')

#C. Average Order Value:
#To find out how much an average order costs, we can calculate the average price of an order based on order_id.
# Calculate average order value
orders_total = data.groupby('order_id')['item_price'].sum()
avg_order_value = orders_total.mean()
print(f'Average order value: ${avg_order_value:.2f}')

#D. Most Common Customizations:
from collections import Counter
customizations = data['choice_description'].apply(lambda x: x.split(','))
all_customizations = [item for sublist in customizations for item in sublist]
most_common_customizations = Counter(all_customizations).most_common(10)
print(most_common_customizations)

#3. Data Visualization:
#Here’s where we can start visualizing the findings using matplotlib and seaborn.

#A. Plotting the Top 10 Most Ordered Items:
#Let’s create a bar chart for the most popular items at Chipotle.
import matplotlib.pyplot as plt
import seaborn as sns

plt.figure(figsize=(10, 6))
sns.barplot(x=top_items.values, y=top_items.index, palette='viridis')
plt.title('Top 10 Most Ordered Items at Chipotle')
plt.xlabel('Quantity Ordered')
plt.ylabel('Item Name')
plt.show()

#B. Distribution of Order Prices:
#A histogram to show the distribution of order prices.
plt.figure(figsize=(8, 5))
sns.histplot(orders_total, kde=True)
plt.title('Distribution of Order Prices')
plt.xlabel('Order Total Price')
plt.ylabel('Frequency')
plt.show()

#4. Advanced Insights:
#A. What are the most expensive items ordered?:
#Identify which items are the most expensive by looking at the highest values in item_price.

most_expensive_items = data.groupby('item_name')['item_price'].max().sort_values(ascending=False).head(10)
print(most_expensive_items)

#B. How much does Chipotle make from different items?:
#Calculate the total revenue generated by each individual item.
revenue_by_item = data.groupby('item_name')['item_price'].sum().sort_values(ascending=False).head(10)
print(revenue_by_item)

#C. Find orders with the most customizations:
#Which orders had the most customization options in choice_description?
data['num_customizations'] = data['choice_description'].apply(lambda x: len(x.split(',')) if x else 0)
most_customized_orders = data.sort_values(by='num_customizations', ascending=False).head(5)
print(most_customized_orders[['order_id', 'item_name', 'choice_description']])
